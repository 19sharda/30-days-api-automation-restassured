### ðŸš€ Day 3: Understanding API Basics â€“ Building a Strong Foundation

Today is all about understanding the fundamentals of APIs, which are crucial for effective automation. Hereâ€™s what I focused on:

### ðŸŒŸ What is an API?
- API (Application Programming Interface): Think of an API as a *waiter* at a restaurant. You (the client) tell the waiter (the API) what you want (e.g., a specific dish), and the waiter brings it from the kitchen (the server). The API facilitates communication between two software programs, like how the waiter connects you to the kitchen.
- Example: A weather app fetching real-time temperature data using a weather API (like asking the waiter for the weather dish).

### ðŸ›  Key Components of an API
1. *Endpoint:* This is like the *menu* at a restaurant, where you see the available dishes. The endpoint is the URL that specifies where the API is located (e.g., https://jsonplaceholder.typicode.com/posts).
2. *HTTP Methods:* These are the different *actions* you can take at a restaurant. They define how you interact with the API:
   - GET: Asking for something on the menu (e.g., retrieve data).
   - POST: Ordering a new dish (e.g., sending data).
   - PUT/PATCH: Asking for a dish to be modified (e.g., updating data).
   - DELETE: Asking the waiter to remove a dish from the menu (e.g., deleting data).
3. *Headers:* These are like the *notes* you give to the waiter when placing your order, like specifying whether you want a vegetarian dish or gluten-free. It provides extra information to the API (e.g., Content-Type: application/json).
4. *Body:* This is like the *order details* you give to the waiter when placing a specific request (e.g., ordering a pizza with extra cheese). It contains the data you send along with POST/PUT requests, usually in formats like JSON or XML.
5. *Response:* After you place your order, the waiter brings back your dish. Similarly, the API returns a response, which could include a status (e.g., 200 OK = order successfully processed, 404 Not Found = dish not available) and the requested data.

### ðŸ’¡ Learning Exercise
- Explore the [JSONPlaceholder](https://jsonplaceholder.typicode.com/) API using Postman (like practicing taking orders with different dishes).
- Practice sending GET, POST, PUT, and DELETE requests to understand their behavior, just like testing different actions at a restaurant.

This foundational knowledge is essential as we begin automating API testing tomorrow!

Whatâ€™s your experience with APIs? Share your insights below.
Fun with GIt :https://github.com/19sharda/30-days-api-automation-restassured/blob/main/src/test/java/tests/practiceDay3.java

#API #RestAssured #LearningJourney #AutomationTesting
